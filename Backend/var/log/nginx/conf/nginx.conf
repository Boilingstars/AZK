events {
    worker_connections 1024;  # Стандартное значение (можно настроить под ваши нужды)
}

http {
    # Определяем переменную для типа информации
    map $request_uri $backend {
        default           http://10.2.1.83:8001;  # Django по умолчанию
    }

    # Логирование
    log_format upstream_log '[$time_local] $remote_addr - $remote_user - $server_name '
                           'to: $backend: $upstream_addr '
                           'request: "$request" '
                           'status: $status bytes: $body_bytes_sent '
                           'referrer: "$http_referer" '
                           'agent: "$http_user_agent" '
                           'forward: "$http_x_forwarded_for"';
                           
    access_log /var/log/nginx/balancer_access.log upstream_log;

    server {
        listen 8000;
        server_name 10.2.1.83;

        # Проверка работоспособности
        location /health {
            access_log off;
            default_type text/plain;
            return 200 "OK";
        }

        # Статус Nginx
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 10.2.1.83;
            deny all;
        }

        # Основное проксирование
        location / {
            # CORS headers
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
                add_header 'Access-Control-Max-Age' 86400;
                return 204;
            }
            add_header 'Access-Control-Allow-Origin' '*';

            # Проксирование на Django
            proxy_pass http://10.2.1.83:8001;
            
            # Таймауты
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
            
            # Заголовки
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Обработка ошибок
            proxy_intercept_errors on;
            error_page 500 502 503 504 /50x.html;
        }

        # Специфичное правило для /test
        location /test {
            # Те же настройки прокси, что и для /
            proxy_pass http://10.2.1.83:8001;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Дополнительные настройки при необходимости
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
        }
    }
}